{"version":3,"sources":["static/star-wars-4.svg","common/Nav.tsx","common/TranstionedPage.tsx","state/stateHooks.ts","common/Toast.ts","static/Rolling-1s-200px.svg","common/Busy.tsx","state/peopleState/personSlice.ts","state/peopleState/peopleSlice.ts","features/people/People.tsx","features/people/PersonDetail.tsx","features/people/About.tsx","App.tsx","state/store.ts","utils/theme.ts","common/apolloClient.ts","serviceWorker.ts","index.tsx"],"names":["useStyles","makeStyles","theme","root","display","appBar","zIndex","drawer","width","flexShrink","drawerPaper","content","flexGrow","padding","spacing","toolbar","mixins","title","menuItemContainer","flexDirection","justifyContent","alignItems","Nav","children","history","useHistory","useState","drawerOpen","setDrawerOpen","anchorEl","classes","Boolean","className","CssBaseline","AppBar","position","Toolbar","Hidden","mdUp","IconButton","edge","color","aria-label","onClick","src","StarWarsLogo","alt","height","smUp","Drawer","open","onClose","variant","paper","style","MenuItem","push","ListItem","ListItemText","primary","smDown","component","TransitionedPage","WrappedComponent","props","transitionAppear","transitionAppearTimeout","transitionEnterTimeout","transitionLeaveTimeout","transitionName","useAppSelector","useSelector","openToast","type","message","toast","success","POSITION","TOP_CENTER","hideProgressBar","toastId","error","Transition","React","forwardRef","ref","Slide","direction","Busy","Dialog","TransitionComponent","keepMounted","aria-labelledby","aria-describedby","DialogContent","Box","LoadingSpinner","textAlign","fontSize","personSlice","createSlice","name","initialState","person","reducers","setPerson","state","payload","actions","personSelector","people","searchStateParameters","searchBy","searchTerm","total","pageSize","numberOfPages","currentPage","nextPage","undefined","nextPageUrl","previousPage","peopleSlice","setSearchBy","setSearchTerm","setTotal","setPageSize","setNumberOfPages","setCurrentPage","setNextPage","setNextPageUrl","setPreviousPage","getPeopleSuccess","peopleSelector","validationSchema","Yup","shape","required","characterName","GET_PEOPLE","gql","GET_PERSON","searchByOptions","People","dispatch","useDispatch","useForm","mode","resolver","yupResolver","defaultValues","handleSubmit","register","formState","errors","control","touchedFields","setValue","watchSearchBy","watch","useLazyQuery","onCompleted","data","getPeople","results","length","count","Math","ceil","next","nextPageArray","split","parseInt","previous","previousPageArray","onError","networkError","result","getPeopleLoading","loading","getPerson","console","log","getPersonLoading","searchPeople","variables","page","getPage","Grid","container","item","xs","lg","Paper","Typography","marginLeft","marginRight","Divider","onSubmit","margin","noValidate","render","field","TextField","label","select","helperText","size","defaultValue","fullWidth","map","option","value","inputProps","maxLength","Button","textTransform","marginTop","startIcon","Chip","disabled","Table","TableHead","TableRow","TableCell","TableBody","row","index","scope","gender","mass","homeworld","Tooltip","placement","arrow","PersonDetail","goBack","borderLeft","backgroundColor","About","App","exact","path","store","configureStore","reducer","peopleReducer","personReducer","createMuiTheme","palette","main","secondary","red","A400","background","default","httpLink","createHttpLink","uri","authLink","setContext","_","headers","token","localStorage","getItem","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","window","location","hostname","match","ReactDOM","ThemeProvider","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.19b0cd07.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/star-wars-4.3bf2a05e.svg\";","import React, { useState, MouseEvent } from \"react\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport GroupIcon from \"@material-ui/icons/Group\";\r\nimport InfoIcon from \"@material-ui/icons/Info\";\r\nimport PeopleIcon from \"@material-ui/icons/People\";\r\nimport PeopleOutlineIcon from \"@material-ui/icons/PeopleOutline\";\r\nimport StarWarsLogo from \"../static/star-wars-4.svg\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n  toolbar: theme.mixins.toolbar,\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  menuItemContainer: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"flex-end\",\r\n    alignItems: \"center\",\r\n  },\r\n}));\r\n\r\nconst Nav: React.FC = ({ children }) => {\r\n  const history = useHistory();\r\n  const [drawerOpen, setDrawerOpen] = useState(false);\r\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\r\n  const openAccountMenu = Boolean(anchorEl);\r\n\r\n  const handleAccountMenu = (event: MouseEvent<HTMLButtonElement>): void => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleCloseAccountMenu = (): void => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const ToggleDrawer = () => {\r\n    if (drawerOpen) {\r\n      setDrawerOpen(false);\r\n    } else {\r\n      setDrawerOpen(true);\r\n    }\r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar position=\"fixed\" className={classes.appBar}>\r\n        <Toolbar>\r\n          <Hidden mdUp>\r\n            <IconButton\r\n              edge=\"start\"\r\n              color=\"inherit\"\r\n              aria-label=\"menu\"\r\n              onClick={ToggleDrawer}\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n          </Hidden>\r\n          <img src={StarWarsLogo} alt=\"Logo\" width=\"150\" height=\"55\" />\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Hidden smUp>\r\n        <Drawer\r\n          open={drawerOpen}\r\n          onClose={() => {\r\n            setDrawerOpen(false);\r\n          }}\r\n          className={classes.drawer}\r\n          variant=\"temporary\"\r\n          classes={{\r\n            paper: classes.drawerPaper,\r\n          }}\r\n          style={{ zIndex: 1099 }}\r\n        >\r\n          <div className={classes.toolbar} />\r\n          <MenuItem\r\n            onClick={() => {\r\n              setDrawerOpen(false);\r\n              history.push(\"/\");\r\n            }}\r\n          >\r\n            <div className={classes.menuItemContainer}>\r\n              <div>\r\n                <ListItemIcon>\r\n                  <GroupIcon />\r\n                </ListItemIcon>\r\n              </div>\r\n              <div>\r\n                <ListItemText primary=\"People\" />\r\n              </div>\r\n            </div>\r\n          </MenuItem>\r\n          <MenuItem\r\n            onClick={() => {\r\n              setDrawerOpen(false);\r\n              history.push(\"/about\");\r\n            }}\r\n          >\r\n            <div className={classes.menuItemContainer}>\r\n              <div>\r\n                <ListItemIcon>\r\n                  <InfoIcon />\r\n                </ListItemIcon>\r\n              </div>\r\n              <div>\r\n                <ListItemText primary=\"About\" />\r\n              </div>\r\n            </div>\r\n          </MenuItem>\r\n        </Drawer>\r\n      </Hidden>\r\n      <Hidden smDown>\r\n        <Drawer\r\n          className={classes.drawer}\r\n          variant=\"permanent\"\r\n          classes={{\r\n            paper: classes.drawerPaper,\r\n          }}\r\n        >\r\n          <div className={classes.toolbar} />\r\n          <MenuItem\r\n            onClick={() => {\r\n              setDrawerOpen(false);\r\n              history.push(\"/\");\r\n            }}\r\n          >\r\n            <div className={classes.menuItemContainer}>\r\n              <div>\r\n                <ListItemIcon component=\"div\">\r\n                  <GroupIcon />\r\n                </ListItemIcon>\r\n              </div>\r\n              <div>\r\n                <ListItemText primary=\"People\" />\r\n              </div>\r\n            </div>\r\n          </MenuItem>\r\n          <MenuItem\r\n            onClick={() => {\r\n              setDrawerOpen(false);\r\n              history.push(\"/about\");\r\n            }}\r\n          >\r\n            <div className={classes.menuItemContainer}>\r\n              <div>\r\n                <ListItemIcon>\r\n                  <InfoIcon />\r\n                </ListItemIcon>\r\n              </div>\r\n              <div>\r\n                <ListItemText primary=\"About\" />\r\n              </div>\r\n            </div>\r\n          </MenuItem>\r\n        </Drawer>\r\n      </Hidden>\r\n      <main className={classes.content}>\r\n        <div className={classes.toolbar} />\r\n        {children}\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","import React from 'react';\r\nimport ReactCSSTransitionGroup from 'react-addons-css-transition-group';\r\n\r\nconst TransitionedPage = (WrappedComponent: any) => {\r\n    const TransitionedComponent = (props: any) => (\r\n        <ReactCSSTransitionGroup\r\n                    transitionAppear={true}\r\n                    transitionAppearTimeout={600}\r\n                    transitionEnterTimeout={600}\r\n                    transitionLeaveTimeout={200}\r\n                    transitionName=\"slide\">\r\n                    <WrappedComponent {...props} />\r\n        </ReactCSSTransitionGroup>\r\n    );\r\n    return TransitionedComponent;\r\n};\r\n\r\nexport default TransitionedPage;","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux'\r\nimport type { RootState, AppDispatch } from './store'\r\n\r\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector","import { toast } from 'react-toastify';\r\n\r\nexport const openToast = (type: string, message: string) => {\r\n    if(type === \"success\"){\r\n      return  toast.success(message,{\r\n            position: toast.POSITION.TOP_CENTER,\r\n            hideProgressBar: true,\r\n            toastId: 19\r\n        });\r\n    }\r\n    if(type === \"error\"){\r\n        return  toast.error(message,{\r\n            position: toast.POSITION.TOP_CENTER,\r\n            hideProgressBar: true,\r\n            toastId: 20\r\n        });\r\n    }\r\n}","export default __webpack_public_path__ + \"static/media/Rolling-1s-200px.7d5a1523.svg\";","import React from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport Box from '@material-ui/core/Box';\r\nimport LoadingSpinner from '../static/Rolling-1s-200px.svg';\r\n\r\nimport { TransitionProps } from '@material-ui/core/transitions';\r\n\r\nconst Transition = React.forwardRef(function Transition(\r\n  props: TransitionProps & { children?: React.ReactElement<any, any> },\r\n  ref: React.Ref<unknown>,\r\n) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\ntype BusyProps = {\r\n  open: boolean;\r\n}\r\n\r\nconst Busy: React.FC<BusyProps> = ({ open }) => {\r\n  \r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={open}\r\n        TransitionComponent={Transition}\r\n        keepMounted\r\n        aria-labelledby=\"alert-dialog-slide-title\"\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n      >\r\n        <DialogContent>\r\n            <Box alignItems=\"center\">\r\n                <img src={LoadingSpinner} alt=\"Logo\"/>\r\n                <p style={{textAlign: 'center', color: \"#2F2F4F\",fontSize: \"20px\"}}>Please wait...</p>\r\n            </Box>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Busy","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { RootState } from '../store';\r\nimport { Person } from '../../models/person';\r\n\r\nexport interface PersonState {\r\n    person: Person\r\n  }\r\n\r\nexport const initialState = {\r\n  person: {}\r\n} as PersonState;\r\n\r\nconst personSlice = createSlice({\r\n  name: 'person',\r\n  initialState,\r\n  reducers: {\r\n    setPerson: (state, { payload }: PayloadAction<Person>) => {\r\n      state.person = payload\r\n    }\r\n  }\r\n})\r\n\r\nexport const {\r\n  setPerson\r\n} = personSlice.actions\r\n\r\nexport const personSelector = (state: RootState) => state.person;\r\nexport default personSlice.reducer;","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { RootState } from '../store';\r\nimport { Person } from '../../models/person';\r\nimport { SearchStateParameters } from '../../models/searchStateParameters';\r\n\r\nexport interface PeopleState {\r\n    searchStateParameters: SearchStateParameters,\r\n    people: Person[]\r\n  }\r\n\r\nexport const initialState = {\r\n  people: [],\r\n  searchStateParameters: {\r\n    searchBy: \"All\",\r\n    searchTerm: \"\",\r\n    total: 0,\r\n    pageSize: 10,\r\n    numberOfPages: 0,\r\n    currentPage: 1,\r\n    nextPage: undefined,\r\n    nextPageUrl: null,\r\n    previousPage: undefined\r\n\r\n  },\r\n} as PeopleState;\r\n\r\nconst peopleSlice = createSlice({\r\n  name: 'people',\r\n  initialState,\r\n  reducers: {\r\n    setSearchBy: (state, { payload }: PayloadAction<string>) => {\r\n      state.searchStateParameters.searchBy = payload\r\n    },\r\n    setSearchTerm: (state, { payload }: PayloadAction<string>) => {\r\n      state.searchStateParameters.searchTerm = payload\r\n    },\r\n    setTotal: (state, { payload }: PayloadAction<number>) => {\r\n      state.searchStateParameters.total = payload\r\n    },\r\n    setPageSize: (state, { payload }: PayloadAction<number>) => {\r\n      state.searchStateParameters.pageSize = payload\r\n    },\r\n    setNumberOfPages: (state, { payload }: PayloadAction<number>) => {\r\n      state.searchStateParameters.numberOfPages = payload\r\n    },\r\n    setCurrentPage: (state, { payload }: PayloadAction<number | undefined>) => {\r\n      state.searchStateParameters.currentPage = payload\r\n    },\r\n    setNextPage: (state, { payload }: PayloadAction<number | undefined>) => {\r\n      state.searchStateParameters.nextPage = payload\r\n    },\r\n    setNextPageUrl: (state, { payload }: PayloadAction<string | null>) => {\r\n      state.searchStateParameters.nextPageUrl = payload\r\n    },\r\n    setPreviousPage: (state, { payload }: PayloadAction<number | undefined>) => {\r\n      state.searchStateParameters.previousPage = payload\r\n    },\r\n    getPeopleSuccess: (state, { payload }: PayloadAction<Person[]>) => {\r\n      state.people = payload\r\n    }\r\n  }\r\n})\r\n\r\nexport const {\r\n  setSearchBy,\r\n  setSearchTerm,\r\n  setTotal,\r\n  setNumberOfPages,\r\n  setPageSize,\r\n  setCurrentPage,\r\n  setNextPage,\r\n  setNextPageUrl,\r\n  setPreviousPage,\r\n  getPeopleSuccess,\r\n} = peopleSlice.actions\r\n\r\nexport const peopleSelector = (state: RootState) => state.people;\r\nexport default peopleSlice.reducer;","import React, { useState, useEffect, ChangeEvent, MouseEvent } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport ListIcon from \"@material-ui/icons/List\";\r\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\r\nimport ArrowForwardIosIcon from \"@material-ui/icons/ArrowForwardIos\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { gql, useLazyQuery } from \"@apollo/client\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Table,\r\n  TableHead,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  IconButton,\r\n  Tooltip,\r\n} from \"@material-ui/core\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport LaunchIcon from \"@material-ui/icons/Launch\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport AutorenewIcon from \"@material-ui/icons/Autorenew\";\r\nimport LockIcon from \"@material-ui/icons/Lock\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport FormatListBulletedIcon from \"@material-ui/icons/FormatListBulleted\";\r\nimport ArrowRightIcon from \"@material-ui/icons/ArrowRight\";\r\nimport ArrowLeftIcon from \"@material-ui/icons/ArrowLeft\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as Yup from \"yup\";\r\nimport { useAppSelector, useAppDispatch } from \"../../state/stateHooks\";\r\nimport { openToast } from \"../../common/Toast\";\r\nimport Busy from \"../../common/Busy\";\r\nimport { Person } from \"../../models/person\";\r\nimport { setPerson } from \"../../state/peopleState/personSlice\";\r\nimport {\r\n  setSearchBy,\r\n  setSearchTerm,\r\n  setTotal,\r\n  setNumberOfPages,\r\n  setPageSize,\r\n  setCurrentPage,\r\n  setNextPage,\r\n  setNextPageUrl,\r\n  setPreviousPage,\r\n  getPeopleSuccess,\r\n  peopleSelector,\r\n} from \"../../state/peopleState/peopleSlice\";\r\n\r\n// search form inputs\r\ninterface SearchParams {\r\n  searchBy: string;\r\n  characterName: string;\r\n}\r\n\r\n//search form validation\r\nconst validationSchema = Yup.object().shape({\r\n  searchBy: Yup.string().required(\"Required\"),\r\n  characterName: Yup.string(),\r\n});\r\n\r\n//get Star Wars characters/people query\r\nconst GET_PEOPLE = gql`\r\n  query($page: Float!) {\r\n    getPeople(page: $page) {\r\n      count\r\n      next\r\n      previous\r\n      results {\r\n        name\r\n        height\r\n        mass\r\n        gender\r\n        homeworld\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n//get Star Wars character/person query\r\nconst GET_PERSON = gql`\r\n  query($name: String!) {\r\n    getPerson(name: $name) {\r\n      count\r\n      next\r\n      previous\r\n      results {\r\n        name\r\n        height\r\n        mass\r\n        gender\r\n        homeworld\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst searchByOptions = [\"All\", \"Name\"];\r\n\r\nconst People = () => {\r\n  const dispatch = useAppDispatch();\r\n  const history = useHistory();\r\n  const {\r\n    people,\r\n    searchStateParameters: {\r\n      searchBy,\r\n      searchTerm,\r\n      currentPage,\r\n      total,\r\n      numberOfPages,\r\n      previousPage,\r\n      nextPage,\r\n      nextPageUrl\r\n    },\r\n  } = useAppSelector(peopleSelector);\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors, touchedFields },\r\n    setValue,\r\n    control,\r\n    watch,\r\n  } = useForm<SearchParams>({\r\n    mode: \"onTouched\",\r\n    resolver: yupResolver(validationSchema),\r\n    defaultValues: {\r\n      searchBy: searchBy,\r\n      characterName: searchTerm,\r\n    },\r\n  });\r\n\r\n  const watchSearchBy = watch(\"searchBy\");\r\n\r\n  //get people query\r\n  const [getPeople, { loading: getPeopleLoading }] = useLazyQuery(GET_PEOPLE, {\r\n    onCompleted: (data) => {\r\n      if (data.getPeople.results.length === 0) {\r\n        openToast(\"error\", \"No characters found!\");\r\n        return;\r\n      }\r\n      dispatch(setTotal(data.getPeople.count));\r\n      dispatch(setNumberOfPages(Math.ceil(data.getPeople.count / 10)));\r\n      //dispatch(setCurrentPage(currentPage + 1));\r\n\r\n      if (data.getPeople.next !== null) {\r\n        let nextPageArray: string[] = data.getPeople.next.split(\"=\");\r\n        let nextPage: string = nextPageArray[nextPageArray.length - 1];\r\n        dispatch(setNextPage(parseInt(nextPage)));\r\n      }\r\n\r\n      dispatch(setNextPageUrl(data.getPeople.next));\r\n\r\n      if (data.getPeople.next === null) {\r\n        dispatch(setNextPage(undefined));\r\n      }\r\n\r\n      if (data.getPeople.previous !== null) {\r\n        let previousPageArray: string[] = data.getPeople.previous.split(\"=\");\r\n        let previousPage: string =\r\n          previousPageArray[previousPageArray.length - 1];\r\n        dispatch(setPreviousPage(parseInt(previousPage)));\r\n      }\r\n\r\n      if (data.getPeople.previous === null) {\r\n        dispatch(setPreviousPage(undefined));\r\n      }\r\n\r\n      dispatch(getPeopleSuccess(data.getPeople.results));\r\n    },\r\n    onError: (error: any) => {\r\n      openToast(\"error\", error.networkError.result.errors[0].message);\r\n    },\r\n  });\r\n\r\n  //get person query given name\r\n  const [getPerson, { loading: getPersonLoading }] = useLazyQuery(GET_PERSON, {\r\n    onCompleted: (data) => {\r\n      if (data.getPerson.results.length === 0) {\r\n        openToast(\"error\", \"No character found!\");\r\n        return;\r\n      }\r\n\r\n      dispatch(getPeopleSuccess(data.getPerson.results));\r\n    },\r\n    onError: (error: any) => {\r\n      console.log(error);\r\n      openToast(\"error\", error.networkError.result.errors[0].message);\r\n    },\r\n  });\r\n\r\n  const viewPerson = (person: Person): void => {\r\n    dispatch(setPerson(person));\r\n    history.push(\"/person-detail\");\r\n  };\r\n\r\n  const searchPeople = (): void => {\r\n    getPeople({\r\n      variables: {\r\n        page: currentPage,\r\n      },\r\n    });\r\n  };\r\n\r\n  const searchPerson = (name: string): void => {\r\n    if (name === \"\") {\r\n      openToast(\"error\", \"Please enter name to proceed\");\r\n      return;\r\n    }\r\n    getPerson({\r\n      variables: {\r\n        name: name,\r\n      },\r\n    });\r\n  };\r\n\r\n  const onSubmit = (data: SearchParams): void => {\r\n    dispatch(setSearchBy(data.searchBy));\r\n    dispatch(setSearchTerm(data.characterName));\r\n    if (data.searchBy === \"All\") {\r\n      return searchPeople();\r\n    }\r\n\r\n    if (data.searchBy === \"Name\") {\r\n      return searchPerson(data.characterName);\r\n    }\r\n  };\r\n\r\n  //get selected page\r\n  const handlePageChange = (event: ChangeEvent<unknown>, value: number) => {\r\n    dispatch(setCurrentPage(value));\r\n    searchPeople();\r\n  };\r\n\r\n  const getPage = (page: number | undefined): void => {\r\n    dispatch(setCurrentPage(page));\r\n    getPeople({\r\n      variables: {\r\n        page: page,\r\n      },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Grid container>\r\n        <Grid item xs={12} lg={8}>\r\n          <Paper>\r\n            <Typography\r\n              variant=\"h6\"\r\n              style={{ marginLeft: 15, marginRight: 15 }}\r\n            >\r\n              Stars Wars Characters\r\n            </Typography>\r\n            <Divider style={{ marginLeft: 15, marginRight: 15 }} />\r\n            <form\r\n              onSubmit={handleSubmit(onSubmit)}\r\n              style={{ margin: 15 }}\r\n              noValidate\r\n            >\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={4}>\r\n                  <Controller\r\n                    name=\"searchBy\"\r\n                    render={({ field }) => (\r\n                      <TextField\r\n                        label=\"Search By\"\r\n                        select\r\n                        helperText={errors.searchBy?.message}\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        defaultValue={\"All\"}\r\n                        fullWidth\r\n                        {...field}\r\n                      >\r\n                        {searchByOptions.map((option) => (\r\n                          <MenuItem key={option} value={option}>\r\n                            {option}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </TextField>\r\n                    )}\r\n                    control={control}\r\n                  />\r\n                </Grid>\r\n                {watchSearchBy === \"Name\" && (\r\n                  <Grid item xs={4}>\r\n                    <Controller\r\n                      name=\"characterName\"\r\n                      render={({ field }) => (\r\n                        <TextField\r\n                          label=\"Name\"\r\n                          helperText={errors.characterName?.message}\r\n                          variant=\"outlined\"\r\n                          size=\"small\"\r\n                          inputProps={{ maxLength: 200 }}\r\n                          fullWidth\r\n                          {...field}\r\n                        />\r\n                      )}\r\n                      control={control}\r\n                    />\r\n                  </Grid>\r\n                )}\r\n                <Grid item xs={2}>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    style={{ textTransform: \"none\", marginTop: 2 }}\r\n                    startIcon={<SearchIcon />}\r\n                  >\r\n                    Search\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </form>\r\n            <br />\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"flex-end\",\r\n                margin: 15,\r\n              }}\r\n            >\r\n              {total !== 0 && watchSearchBy === \"All\" && (\r\n                <Chip\r\n                  label={`Total Results: ${total} | Page ${currentPage} of ${numberOfPages}`}\r\n                  color=\"secondary\"\r\n                />\r\n              )}\r\n              {watchSearchBy === \"All\" && numberOfPages !== 0 && (\r\n                <div style={{marginTop: -5}}>\r\n                  <IconButton\r\n                    color=\"primary\"\r\n                    aria-label=\"previous page\"\r\n                    component=\"span\"\r\n                    disabled={previousPage === undefined }\r\n                    onClick={() => getPage(previousPage)}\r\n                  >\r\n                    <ArrowBackIosIcon />\r\n                  </IconButton>\r\n                  <IconButton\r\n                    color=\"primary\"\r\n                    aria-label=\"previous page\"\r\n                    component=\"span\"\r\n                    disabled={nextPage === undefined}\r\n                    onClick={() => getPage(nextPage)}\r\n                  >\r\n                    <ArrowForwardIosIcon />\r\n                  </IconButton>\r\n                </div>\r\n              )}\r\n            </div>\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>Name</TableCell>\r\n                  <TableCell>Gender</TableCell>\r\n                  <TableCell>Height</TableCell>\r\n                  <TableCell>Mass</TableCell>\r\n                  <TableCell>Homeworld</TableCell>\r\n                  <TableCell>Actions</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {people.map((row, index) => (\r\n                  <TableRow key={index}>\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                      {row.name}\r\n                    </TableCell>\r\n                    <TableCell>{row.gender}</TableCell>\r\n                    <TableCell>{row.height}</TableCell>\r\n                    <TableCell>{row.mass}</TableCell>\r\n                    <TableCell>{row.homeworld}</TableCell>\r\n                    <TableCell>\r\n                      <Tooltip title=\"View person detail\" placement=\"top\" arrow>\r\n                        <IconButton\r\n                          aria-label=\"view\"\r\n                          color=\"primary\"\r\n                          onClick={() => viewPerson(row)}\r\n                        >\r\n                          <LaunchIcon />\r\n                        </IconButton>\r\n                      </Tooltip>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n            <Busy open={getPeopleLoading || getPersonLoading} />\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default People;\r\n","import React from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport KeyboardBackspaceIcon from \"@material-ui/icons/KeyboardBackspace\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useAppSelector } from \"../../state/stateHooks\";\r\nimport { personSelector } from \"../../state/peopleState/personSlice\";\r\n\r\nconst PersonDetail = () => {\r\n  const history = useHistory();\r\n  const { person } = useAppSelector(personSelector);\r\n\r\n  return (\r\n    <Grid container>\r\n      <Grid item xs={12} lg={6}>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          startIcon={<KeyboardBackspaceIcon />}\r\n          style={{ marginLeft: 0, textTransform: \"none\" }}\r\n          onClick={() => {\r\n            history.goBack();\r\n          }}\r\n        >\r\n          Back\r\n        </Button>\r\n        <Paper>\r\n          <div style={{ margin: 15 }}>\r\n            <Typography variant=\"h6\">Star Wars Character Detail</Typography>\r\n            <Divider />\r\n            <br />\r\n            <div\r\n              style={{\r\n                borderLeft: \"25px solid #34545c\",\r\n                backgroundColor: \"#A0AFB7\",\r\n                padding: \"5px\",\r\n              }}\r\n            >\r\n              <p>\r\n                <b>Name:</b> {person.name}\r\n              </p>\r\n              <p>\r\n                <b>Height:</b> {person.height}\r\n              </p>\r\n              <p>\r\n                <b>Mass:</b> {person.mass}\r\n              </p>\r\n              <p>\r\n                <b>Gender:</b> {person.gender}\r\n              </p>\r\n              <p>\r\n                <b>Home World:</b> {person.homeworld}\r\n              </p>\r\n            </div>\r\n          </div>\r\n          <br />\r\n        </Paper>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default PersonDetail;\r\n","import React from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport KeyboardBackspaceIcon from \"@material-ui/icons/KeyboardBackspace\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport { TransitionProps } from \"@material-ui/core/transitions\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst About = () => {\r\n  const history = useHistory();\r\n  return (\r\n    <Grid container>\r\n      <Grid item xs={12} lg={6}>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          startIcon={<KeyboardBackspaceIcon />}\r\n          style={{ marginLeft: 0, textTransform: \"none\" }}\r\n          onClick={() => {\r\n            history.goBack();\r\n          }}\r\n        >\r\n          Back\r\n        </Button>\r\n        <Paper>\r\n          <div style={{ margin: 15 }}>\r\n            <Typography variant=\"h6\">Introduction</Typography>\r\n            <Divider />\r\n            <br />\r\n            <p\r\n              style={{\r\n                borderLeft: \"25px solid #34545c\",\r\n                backgroundColor: \"#A0AFB7\",\r\n                padding: \"5px\",\r\n              }}\r\n            >\r\n              This Star Wars app provides a way to retrieve detailed information\r\n              about characters of the Star Wars Universe. It lists all Star Wars\r\n              characters and details of each individual character. One can\r\n              search for a particular character using the character's name.\r\n            </p>\r\n            <br />\r\n          </div>\r\n        </Paper>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React from \"react\";\nimport { Route, Switch, HashRouter, useLocation } from \"react-router-dom\";\nimport SwitchWithSlide from \"react-router-animation\";\n//import { AnimatedSwitch, AnimatedRoute, spring } from \"react-router-transition\";\n//import { css } from \"glamor\";\nimport { ToastContainer } from \"react-toastify\";\nimport Nav from \"../src/common/Nav\";\nimport \"./App.css\";\nimport TransitionedPage from \"./common/TranstionedPage\";\n//import PageShell from \"./common/PageShell\";\nimport People from \"./features/people/People\";\nimport PersonDetail from \"./features/people/PersonDetail\";\nimport About from \"./features/people/About\";\n\nfunction App() {\n  return (\n    <Nav>\n      <ToastContainer />\n      <Switch>\n        <Route exact path=\"/\" component={TransitionedPage(People)}/>\n        <Route path=\"/person-detail\" component={TransitionedPage(PersonDetail)}/>\n        <Route path=\"/about\" component={TransitionedPage(About)}/>\n      </Switch>\n    </Nav>\n  );\n}\n\nexport default App;\n","import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit';\nimport peopleReducer from './peopleState/peopleSlice';\nimport personReducer from './peopleState/personSlice';\n\nexport const store = configureStore({\n  reducer: {\n    people: peopleReducer,\n    person: personReducer\n  },\n});\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n\n","import { createMuiTheme } from '@material-ui/core/styles';\r\nimport { red } from '@material-ui/core/colors';\r\n\r\n// Create a theme instance.\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#34545c',\r\n    },\r\n    secondary: {\r\n      main: '#19857b',\r\n    },\r\n    error: {\r\n      main: red.A400,\r\n    },\r\n    background: {\r\n      default: '#fff',\r\n    },\r\n  },\r\n});\r\n\r\nexport default theme;\r\n","import { ApolloClient, createHttpLink, InMemoryCache } from '@apollo/client';\r\nimport { setContext } from '@apollo/client/link/context';\r\n\r\nconst httpLink = createHttpLink({\r\n  uri: 'http://localhost:7000/graphql',\r\n});\r\n\r\nconst authLink = setContext((_, { headers }) => {\r\n  // get the authentication token from local storage if it exists\r\n  const token = localStorage.getItem('token');\r\n  // return the headers to the context so httpLink can read them\r\n  return {\r\n    headers: {\r\n      ...headers,\r\n      authorization: token ? `Bearer ${token}` : \"\",\r\n    }\r\n  }\r\n});\r\n\r\nconst client = new ApolloClient({\r\n  link: authLink.concat(httpLink),\r\n  cache: new InMemoryCache()\r\n});\r\n\r\nexport default client;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport { Provider } from \"react-redux\";\nimport { ApolloProvider } from \"@apollo/client\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { store }  from \"./state/store\";\nimport theme from \"./utils/theme\";\nimport client from \"./common/apolloClient\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n    <ThemeProvider theme={theme}>\n      <ApolloProvider client={client}>\n        <Provider store={store}>\n          <Router>\n            <App />\n          </Router>\n        </Provider>\n      </ApolloProvider>\n    </ThemeProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}